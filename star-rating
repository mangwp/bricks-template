//Element//

<?php
namespace Bricks;

if ( ! defined( 'ABSPATH' ) ) exit; // Exit if accessed directly

class Star_rating extends Element {
	public $category = 'custom-elements';
	public $name     = 'star-rating';
	public $icon     = 'ti-star';

	public function get_label() {
		return esc_html__( 'Icon', 'bricks' );
	}

	public function set_controls() {
        $this->controls['rating'] = [
            'tab' => 'content',
            'label' => esc_html__( 'Rating', 'bricks' ),
            'type' => 'text',
            'spellcheck' => true, // Default: false
            // 'trigger' => 'enter', // Default: 'enter'
            'inlineEditing' => true,
            'default' => 'Here goes your rating ..',
          ];
          $this->controls['star'] = [
            'tab' => 'content',
            'label' => esc_html__( 'Star Count', 'bricks' ),
            'type' => 'text',
            'spellcheck' => true, // Default: false
            // 'trigger' => 'enter', // Default: 'enter'
            'inlineEditing' => true,
            'default' => 'Star Count ..',
          ];
		$this->controls['icon'] = [
			'tab'     => 'content',
			'label'   => esc_html__( 'Icon Full', 'bricks' ),
			'type'    => 'icon',
			'css'     => [
				[
					'selector' => '&.icon-svg', // NOTE: Undocumented: & = no space (add to element root)
				],
			],
			'default' => [
				'library' => 'themify',
				'icon'    => 'ti-star',
			],
		];
        $this->controls['iconhalf'] = [
			'tab'     => 'content',
			'label'   => esc_html__( 'Icon Half', 'bricks' ),
			'type'    => 'icon',
			'css'     => [
				[
					'selector' => '&.icon-svg', // NOTE: Undocumented: & = no space (add to element root)
				],
			],
			'default' => [
				'library' => 'themify',
				'icon'    => 'ti-star',
			],
		];
        $this->controls['iconempty'] = [
			'tab'     => 'content',
			'label'   => esc_html__( 'Icon Empty', 'bricks' ),
			'type'    => 'icon',
			'css'     => [
				[
					'selector' => '&.icon-svg', // NOTE: Undocumented: & = no space (add to element root)
				],
			],
			'default' => [
				'library' => 'themify',
				'icon'    => 'ti-star',
			],
		];
		$this->controls['iconColor'] = [
			'tab'      => 'content',
			'label'    => esc_html__( 'Color', 'bricks' ),
			'type'     => 'color',
			'css'      => [
				[
					'property' => 'color',
				],
			],
			'required' => [ 'icon.icon', '!=', '' ],
		];

		$this->controls['iconSize'] = [
			'tab'         => 'content',
			'label'       => esc_html__( 'Size', 'bricks' ),
			'type'        => 'number',
			'units'       => true,
			'css'         => [
				[
					'property' => 'font-size',
				],
			],
			'placeholder' => '60px',
			'required'    => [ 'icon.icon', '!=', '' ],
		];

		$this->controls['_typography']['placeholder']['font-size']   = 60;
		$this->controls['_typography']['placeholder']['line-height'] = 1;
	}

	public function render() {
		$settings = $this->settings;
        $icon     = ! empty( $settings['icon'] ) ? self::render_icon( $settings['icon']) : false;
		$iconhalf     = ! empty( $settings['iconhalf'] ) ? self::render_icon( $settings['iconhalf']) : false;
        $iconempty     = ! empty( $settings['iconempty'] ) ? self::render_icon( $settings['iconempty']) : false;

        $rating = $this->render_dynamic_data( $settings['rating'] );
        $star = $this->render_dynamic_data( $settings['star'] );

		if ( ! $icon ) {
			return $this->render_element_placeholder(
				[
					'title' => esc_html__( 'No icon selected.', 'bricks' ),
				]
			);
		};
        if ( $rating ) {
            $average_stars = round( $rating * 2 ) / 2;
        
            $drawn = $star;
    
            echo "<div {$this->render_attributes('_root')}>";
            
            // full stars.
            for ( $i = 0; $i < floor( $average_stars ); $i++ ) {
                $drawn--;
                echo $icon;
            }
    
            // half stars.
            if ( $rating - floor( $average_stars ) === 0.5 ) {
                $drawn--;
                echo $iconhalf;
            }
    
            // empty stars.
            for ( $i = 0; $i < $drawn; $i++ ) {
                echo $iconempty;
            }
    
            echo "</div>";
        }

		
	}
}
